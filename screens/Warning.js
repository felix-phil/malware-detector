import React, { useEffect, useState } from 'react';
import {
  StyleSheet,
  View,
  SafeAreaView,
  ScrollView,
  Alert,
} from 'react-native';
import WarnAnimation from '../components/animation/Warning';
import MainButton from '../components/buttons/MainButton';
import { Text, List } from 'react-native-paper';
import { useDispatch } from 'react-redux';
import * as messageActions from '../store/actions/messages';
import { deleteFile } from '../services/delete-file';

const Warning = ({ navigation, route }) => {
  const [loading, setLoading] = useState(false);
  const fileSelected = route.params?.fileSelected;
  const dispatch = useDispatch();
  const [isDeleted, setisDeleted] = useState(false);

  useEffect(() => {
    navigation.addListener('beforeRemove', (e) => {
      if (isDeleted) {
        return;
      }
      e.preventDefault();
      Alert.alert(
        'Warning',
        'Are you sure you want to quit without deleting the file?',
        [
          {
            onPress: () => {},
            style: 'cancel',
            text: 'No',
          },
          {
            onPress: () => navigation.dispatch(e.data.action),
            style: 'destructive',
            text: 'Yes',
          },
        ]
      );
    });

    return () => {
      navigation.removeListener('beforeRemove');
    };
  }, [navigation, isDeleted]);

  const handleDelete = async () => {
    //Delete File
    try {
      setLoading(true);
      await deleteFile(fileSelected.uri);
      setisDeleted(true);
      dispatch(
        messageActions.setMessage(
          'Note: Make sure the file is deleted in ' + fileSelected.uri,
          'info'
        )
      );
      setLoading(false);
      navigation.navigate('Safe');
    } catch (err) {
      dispatch(messageActions.setMessage('Unable to delete file', 'error'));
      setLoading(false);
      console.log(err);
    }
  };
  return (
    <SafeAreaView style={styles.screen}>
      <ScrollView
        style={{ flex: 1 }}
        contentContainerStyle={{
          justifyContent: 'center',
          alignItems: 'center',
        }}
      >
        <View style={styles.sectionChip}>
          <List.Item title={fileSelected?.name} />
        </View>
        <View style={styles.sectionIcon}>
          <WarnAnimation style={styles.icon} />
        </View>
        <View style={styles.sectionForm}>
          <Text style={styles.formLabel}>
            This PDF file seems to contain malicious content, it is advisable
            you delete this file. Do you want to delete this file?
          </Text>
          <View style={styles.btnGroup}>
            <View style={styles.formBtn}>
              <MainButton
                title="SCAN"
                mode="contained"
                onPress={() => {
                  navigation.navigate('Scan');
                }}
              />
            </View>
            <View style={styles.formBtn}>
              <MainButton
                title="DELETE"
                mode="outlined"
                icon="delete"
                color="red"
                onPress={handleDelete}
                loading={loading}
              />
            </View>
          </View>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

export default Warning;

const styles = StyleSheet.create({
  screen: {
    flex: 1,
  },
  sectionChip: {
    marginVertical: '5%',
    width: '80%',
  },
  sectionIcon: {
    height: 250,
    backgroundColor: 'transparent',
    marginVertical: '10%',
  },
  sectionForm: {
    width: '80%',
  },
  icon: {
    backgroundColor: 'transparent',
  },
  formLabel: {
    color: '#808080',
    fontSize: 17,
    textAlign: 'center',
  },
  btnGroup: {
    marginVertical: '15%',
    flexDirection: 'row',
    width: '100%',
    justifyContent: 'center',
  },
  formBtn: {
    padding: 5,
    width: '50%',
  },
  btn: {
    // flex: 1,
  },
});
